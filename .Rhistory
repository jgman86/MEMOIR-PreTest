relocate(Condition, .after =Subject)
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
files_seq <-list.files(path_data,pattern = "Ran",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
df_seq <- files_seq %>% map(read_csv) %>% reduce(rbind)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs)) %>% filter(Subject != c(19,11)) # bug for last column is character fixed in next revision
df_seq <- df_seq %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 2
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
# Setup
## Set Path
path <- here()
## STAN Setup
cmd_path<-paste0("C:\\Coding\\cmdstan-2.32.1")
set_cmdstan_path(path=cmd_path)
# Model COmpilation
m3_CS <- cmdstan_model("Models/M3_ComplexSpan_CS_Choleksy.stan")
# Initialization function for sampling
init_pre <- function()
{
list(hyper_pars=c(runif(stan.dat$J,10,20)),
subj_pars=c(runif(stan.dat$N,1,10)))
}
# Read in Data ----
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 2
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs)) %>% filter(Subject != c(19,11)) # bug for last column is character fixed in next revision
df_ran
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
files_ran
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 1
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
files_ran
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
problems()
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
source("C:/Users/Jan/Desktop/MEMOIR PreTest/Analysis.R", echo=TRUE)
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
ifelse(dataset==2, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
df_seq <- files_seq %>% map(read_csv) %>% reduce(rbind)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
df_ran
dataset <- 1
ifelse(dataset==2, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
df_ran
View(df_ran)
library(tidyverse)
library(here)
library(cmdstanr)
# Setup
## Set Path
path <- here()
## STAN Setup
cmd_path<-paste0("C:\\Coding\\cmdstan-2.32.1")
set_cmdstan_path(path=cmd_path)
# Model COmpilation
m3_CS <- cmdstan_model("Models/M3_ComplexSpan_CS_Choleksy.stan")
# Initialization function for sampling
init_pre <- function()
{
list(hyper_pars=c(runif(stan.dat$J,10,20)),
subj_pars=c(runif(stan.dat$N,1,10)))
}
# Read in Data ----
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 1
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
files_ran
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 2
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
# Load Datasets
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
#files_seq <-list.files(path_data,pattern = "Ran",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
#df_seq <- files_seq %>% map(read_csv) %>% reduce(rbind)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
#df_seq <- df_seq %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))
df_ran
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind) %>% filter(Subject != c(11,19))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind) %>% filter(Subject !%in% c(11,19))
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind) %>% filter(Subject %in% c(!11,!19))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind) %>% filter(!Subject %in% c(11,19))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
## Add Weight Matrix for random recall
d_weights <- df_ran %>% select(Subject,n_DIP_Pos1:n_DIP_Pos6, n_DIP_total, DIP, DIOP) %>%
mutate(n_DIOP_Pos1 = case_when(
n_DIP_Pos1 == 0 ~ 0,
n_DIP_Pos1 == 1 ~ n_DIP_total -1,
n_DIP_Pos1 == 2 ~ n_DIP_total -2),
n_DIOP_Pos2 = case_when(   n_DIP_Pos2 == 0 ~ 0,
n_DIP_Pos2 == 1 ~ n_DIP_total -1,
n_DIP_Pos2 == 2 ~ n_DIP_total -2),
n_DIOP_Pos3 = case_when(        n_DIP_Pos3 == 0 ~ 0,
n_DIP_Pos3 == 1 ~ n_DIP_total -1,
n_DIP_Pos3 == 2 ~ n_DIP_total -2),
n_DIOP_Pos4 = case_when(n_DIP_Pos4 == 0 ~ 0,
n_DIP_Pos4 == 1 ~ n_DIP_total -1,
n_DIP_Pos4 == 2 ~ n_DIP_total -2),
n_DIOP_Pos5 = case_when(n_DIP_Pos5 == 0 ~ 0,
n_DIP_Pos5 == 1 ~ n_DIP_total -1,
n_DIP_Pos5 == 2 ~ n_DIP_total -2),
n_DIOP_Pos6 = case_when(n_DIP_Pos6 == 0 ~ 0,
n_DIP_Pos6 == 1 ~ n_DIP_total -1,
n_DIP_Pos6 == 2 ~ n_DIP_total -2)) %>% group_by(Subject) %>%
summarise(DIP_total = sum(n_DIP_total),
DIPs = sum(DIP),
DIOPs = sum(DIOP),
DIP_weight =  DIP_total/ 114,
DIOP_total = sum(across(.cols= n_DIOP_Pos1:n_DIOP_Pos6, sum)),
DIOP_weight = DIOP_total /114 ) %>% select(Subject, DIPs,DIP_total, DIP_weight,DIOPs, DIOP_total,DIOP_weight)
## Weight Matrix DIP and DIOP
df_full <- cbind(df_full, d_weights$DIP_weight, d_weights$DIOP_weight)
df_full <-choices_ran
## Add Weight Matrix for random recall
d_weights <- df_ran %>% select(Subject,n_DIP_Pos1:n_DIP_Pos6, n_DIP_total, DIP, DIOP) %>%
mutate(n_DIOP_Pos1 = case_when(
n_DIP_Pos1 == 0 ~ 0,
n_DIP_Pos1 == 1 ~ n_DIP_total -1,
n_DIP_Pos1 == 2 ~ n_DIP_total -2),
n_DIOP_Pos2 = case_when(   n_DIP_Pos2 == 0 ~ 0,
n_DIP_Pos2 == 1 ~ n_DIP_total -1,
n_DIP_Pos2 == 2 ~ n_DIP_total -2),
n_DIOP_Pos3 = case_when(        n_DIP_Pos3 == 0 ~ 0,
n_DIP_Pos3 == 1 ~ n_DIP_total -1,
n_DIP_Pos3 == 2 ~ n_DIP_total -2),
n_DIOP_Pos4 = case_when(n_DIP_Pos4 == 0 ~ 0,
n_DIP_Pos4 == 1 ~ n_DIP_total -1,
n_DIP_Pos4 == 2 ~ n_DIP_total -2),
n_DIOP_Pos5 = case_when(n_DIP_Pos5 == 0 ~ 0,
n_DIP_Pos5 == 1 ~ n_DIP_total -1,
n_DIP_Pos5 == 2 ~ n_DIP_total -2),
n_DIOP_Pos6 = case_when(n_DIP_Pos6 == 0 ~ 0,
n_DIP_Pos6 == 1 ~ n_DIP_total -1,
n_DIP_Pos6 == 2 ~ n_DIP_total -2)) %>% group_by(Subject) %>%
summarise(DIP_total = sum(n_DIP_total),
DIPs = sum(DIP),
DIOPs = sum(DIOP),
DIP_weight =  DIP_total/ 114,
DIOP_total = sum(across(.cols= n_DIOP_Pos1:n_DIOP_Pos6, sum)),
DIOP_weight = DIOP_total /114 ) %>% select(Subject, DIPs,DIP_total, DIP_weight,DIOPs, DIOP_total,DIOP_weight)
## Weight Matrix DIP and DIOP
df_full <- cbind(df_full, d_weights$DIP_weight, d_weights$DIOP_weight)
d_weight <- d_weights %>% select(DIP_weight,DIOP_weight)
## Data creation for STAN ----
N = length(unique(choices_ran$Subject))
respCat = c(1,5,1,5,10)
stan.dat <- list(count = as.matrix(choices_ran[,3:7]),
N = N,
K = 5,
J = 3,
d_weight = d_weight,
retrievals = choices_seq$Retrievals[1],
R = respCat,
scale_b = 0.1)
N = length(unique(choices_ran$Subject))
respCat = c(1,5,1,5,10)
stan.dat <- list(count = as.matrix(choices_ran[,3:7]),
N = N,
K = 5,
J = 3,
d_weight = d_weight,
retrievals = choices_seq$Retrievals[1],
R = respCat,
scale_b = 0.1)
N = length(unique(choices_ran$Subject))
respCat = c(1,5,1,5,10)
stan.dat <- list(count = as.matrix(choices_ran[,3:7]),
N = N,
K = 5,
J = 3,
d_weight = d_weight,
retrievals = choices_ran$Retrievals[1],
R = respCat,
scale_b = 0.1)
## Fit the shit and extract Parameters  ----
fit3_pre <- m3_CS$sample(data = stan.dat,
refresh = 100,
chains = 4,
parallel_chains = 4,
iter_warmup = 1500,
iter_sampling = 3000,
adapt_delta = .99,
max_treedepth = 15,
init = init_pre,
show_messages = F)
# Extract Parameters for pre cue condition (Multivariate)
M3_hyper <- fit3_pre$summary(c("hyper_pars","mu_f"),mean)
M3_hyper
M3_subj <- fit3_pre$summary(c("subj_pars"), mean)
M3_subj
M3_count_rep <- fit3_pre$summary(c("count_rep"),mean)
M3_omega
M3_omega <- fit3_pre$summary("cor_mat_lower_tri",mean)
# Tidy Subject Parameters
subj <- M3_subj  %>% mutate(variable = str_remove_all(variable, "subj_pars")) %>%
separate(col = variable,into = c("theta","Subject"),sep = ",")  %>%
mutate(Subject = str_remove(Subject,pattern = "]"),
theta = case_when(theta == "[1" ~ "c",
theta == "[2" ~ "a",
theta == "[3" ~ "logMu_f")) %>%
pivot_wider(.,names_from = "theta",values_from = c("mean"))%>% mutate(Subject = as.integer(Subject))
subj
f
f <- M3_f %>% mutate(Subject = seq(1:stan.dat$N), theta = "f") %>%
relocate(c("Subject","theta"), .before = variable) %>% select(-variable) %>%
pivot_wider(.,names_from = "theta",values_from = c("mean"))
M3_f <- fit3_pre$summary(c("f"), mean,sd)
f <- M3_f %>% mutate(Subject = seq(1:stan.dat$N), theta = "f") %>%
relocate(c("Subject","theta"), .before = variable) %>% select(-variable) %>%
pivot_wider(.,names_from = "theta",values_from = c("mean"))
f
choices_ran
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 1
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
#files_seq <-list.files(path_data,pattern = "Ran",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
#df_seq <- files_seq %>% map(read_csv) %>% reduce(rbind)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
#df_seq <- df_seq %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))
# Sum Up Categorie Choices
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
df_full <-choices_ran
df_full %>% group_by(Condition) %>% summarise(meanDIP = mean(SumDIP), meanDIOP = mean(SumDIOP),
meanIOP=mean(SumIOP),meanNPL = mean(SumNPLs),
meanACC = mean(ACC_Main),
meanACC_secondary=mean(ACC_Sec))
## Add Weight Matrix for random recall
d_weights <- df_ran %>% select(Subject,n_DIP_Pos1:n_DIP_Pos6, n_DIP_total, DIP, DIOP) %>%
mutate(n_DIOP_Pos1 = case_when(
n_DIP_Pos1 == 0 ~ 0,
n_DIP_Pos1 == 1 ~ n_DIP_total -1,
n_DIP_Pos1 == 2 ~ n_DIP_total -2),
n_DIOP_Pos2 = case_when(   n_DIP_Pos2 == 0 ~ 0,
n_DIP_Pos2 == 1 ~ n_DIP_total -1,
n_DIP_Pos2 == 2 ~ n_DIP_total -2),
n_DIOP_Pos3 = case_when(        n_DIP_Pos3 == 0 ~ 0,
n_DIP_Pos3 == 1 ~ n_DIP_total -1,
n_DIP_Pos3 == 2 ~ n_DIP_total -2),
n_DIOP_Pos4 = case_when(n_DIP_Pos4 == 0 ~ 0,
n_DIP_Pos4 == 1 ~ n_DIP_total -1,
n_DIP_Pos4 == 2 ~ n_DIP_total -2),
n_DIOP_Pos5 = case_when(n_DIP_Pos5 == 0 ~ 0,
n_DIP_Pos5 == 1 ~ n_DIP_total -1,
n_DIP_Pos5 == 2 ~ n_DIP_total -2),
n_DIOP_Pos6 = case_when(n_DIP_Pos6 == 0 ~ 0,
n_DIP_Pos6 == 1 ~ n_DIP_total -1,
n_DIP_Pos6 == 2 ~ n_DIP_total -2)) %>% group_by(Subject) %>%
summarise(DIP_total = sum(n_DIP_total),
DIPs = sum(DIP),
DIOPs = sum(DIOP),
DIP_weight =  DIP_total/ 114,
DIOP_total = sum(across(.cols= n_DIOP_Pos1:n_DIOP_Pos6, sum)),
DIOP_weight = DIOP_total /114 ) %>% select(Subject, DIPs,DIP_total, DIP_weight,DIOPs, DIOP_total,DIOP_weight)
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 1
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
# Load Datasets
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
files_ran
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
View(df_ran)
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 2
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
df_ran
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject)
choices_ran
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(starts_with("Sum"),.x~Retrievals.names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(starts_with("Sum"),.x~Retrievals, names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(starts_with("Sum"),.x/Retrievals, names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(starts_with("Sum"),./Retrievals, names="p{.col}"))
View(df_ran)
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(SumIIP:SumNPLs,./Retrievals, names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(SumIIP:SumNPLs, . / Retrievals, names="p{.col}"))
rlang::last_trace()
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>% mutate(across(SumIIP:SumNPLs, ~ .x / Retrievals, names="p{.col}"))
rlang::last_trace()
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
across(SumIIP:SumNPLs, ~ .x / Retrievals, names="p{.col}"),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~ list(log), names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, list(log), names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, list(log), .names="p{.col}"))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}"))
choices_ran
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}")) %>% summarise(across(starts_with("p"), mean ))
choices_ran
# Set Data Set 1 = Visual, 2 = Verbal
dataset <- 1
ifelse(dataset==1, path_data <- paste0(path,"/Data_Visual/New Timing"),
path_data <- paste0(path,"/Data_Verbal/New Timing"))
# Load Datasets
files_ran <-list.files(path_data,pattern = "m3",full.names = T)
#files_seq <-list.files(path_data,pattern = "Ran",full.names = T)
df_ran <- files_ran %>% map(read_csv) %>% reduce(rbind)
#df_seq <- files_seq %>% map(read_csv) %>% reduce(rbind)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
#df_seq <- df_seq %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))
View(df_ran)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"))# bug for last column is character fixed in next revision
View(df_ran)
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}")) %>% summarise(across(starts_with("p"), mean ))
, NPLs=as.numeric(NPLs)
df_ran <- df_ran %>% mutate(NPLs = str_remove(NPLs,pattern = ",.*"), NPLs=as.numeric(NPLs))# bug for last column is character fixed in next revision
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}")) %>% summarise(across(starts_with("p"), mean ))
choices_ran
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% filter(Subject != 24) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}")) %>% summarise(across(starts_with("p"), mean ))
choices_ran
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% filter(Subject != 24) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% #filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}")) %>% summarise(across(starts_with("p"), mean ))
choices_ran
df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% filter(Subject != 24) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask))
choices_ran <- df_ran %>% select(Subject,SumACC_SecTask,IIP:NPLs) %>% filter(!Subject %in% c(21,24)) %>% group_by(Subject) %>%
summarise(across(IIP:NPLs, list(sum), .names = "Sum{.col}"),
Retrievals = sum(SumIIP,SumIOP,SumDIP,SumDIOP,SumNPLs),
ACC_Main=SumIIP/Retrievals,
ACC_Sec = mean(SumACC_SecTask)) %>% mutate(Condition = "Random Recall") %>%
relocate(Condition, .after =Subject) %>% #filter(!Subject %in% c(11,19)) %>%
mutate(across(SumIIP:SumNPLs, ~.x / Retrievals, .names="p{.col}")) %>% summarise(across(starts_with("p"), mean ))
choices_ran
